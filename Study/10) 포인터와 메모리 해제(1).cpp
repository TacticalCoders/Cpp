#include <iostream>

using namespace std;

int main() {
	//C++ : 객체지향 프로그래밍
	/*
	컴파일 시간이 아닌 실행 시간에 어떠한 결정을 내릴 수 있다.
	ex) 배열 생성
	재래적 절차적 프로그래밍 : 배열의 크기가 미리 결정
	객체지향 프로그래밍 : 배열의 크기를 실행 시간 결정
	*/

	// 포인터 : 사용할 주소에 이름을 붙인다.
	// 즉, 포인터는 포인터의 이름이 주소를 나타낸다.
	// 간접값 연산자, 간접 참조 연산자*

	int *a; //C style
	int* b; //C++ style
	int* c, d; //c는 포인터 변수, d는 int형 변수로 선언이 됨.

	d = 6;
	b = &d; //이 방식은 그리 의미 있는 방식이 아님. 초기화 하지 않은 변수도 포인터에 주소를 저장할 수 있음. <- 이게 의미 있음.

	cout << "d의 값 " << d << endl;
	cout << "*b의 값" << *b << endl;

	cout << "d의 주소" << &d << endl;
	cout << "*b의 주소" << b << endl; //b에 들어있는 값 = *b의 주소.

	*b = *b + 1;

	cout << "이제 d의 값은 " << d << endl;

	return 0;
}
